{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ArdaMazreku\\\\Downloads\\\\spacex-api\\\\finished-result\\\\src\\\\components\\\\NavBar\\\\NavBar.js\";\nimport React, { useRef } from 'react';\nimport { gql, useQuery } from '@apollo/client'; // components\n\nimport Error from './../Error';\nimport Loader from './../Loader';\nimport TopMenu from './../TopMenu';\nimport SideMenu from './../SideMenu'; // hooks\n\nimport useNavigation from './../../hooks/useNavigation'; // style\n\nimport './style.scss';\nconst GET_ROCKETS_NAMES = gql`\n    {\n        rockets(offset: 1) {\n            id\n            name\n        }\n    }\n`;\n\nconst NavBar = () => {\n  const navRef = useRef(null);\n  const {\n    isMobileView,\n    isMenuOpen,\n    setIsMenuOpen\n  } = useNavigation(navRef);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_ROCKETS_NAMES);\n  if (loading) return /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  });\n  if (error) return /*#__PURE__*/React.createElement(Error, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    ref: navRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TopMenu, {\n    isMenuOpen: isMenuOpen,\n    isMobileView: isMobileView,\n    toggleMenu: setIsMenuOpen,\n    rockets: data.rockets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(SideMenu, {\n    isMenuOpen: isMenuOpen,\n    isMobileView: isMobileView,\n    toggleMenu: setIsMenuOpen,\n    rockets: data.rockets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default NavBar;","map":{"version":3,"names":["React","useRef","gql","useQuery","Error","Loader","TopMenu","SideMenu","useNavigation","GET_ROCKETS_NAMES","NavBar","navRef","isMobileView","isMenuOpen","setIsMenuOpen","data","loading","error","rockets"],"sources":["C:/Users/ArdaMazreku/Downloads/spacex-api/finished-result/src/components/NavBar/NavBar.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { gql, useQuery } from '@apollo/client';\n// components\nimport Error from './../Error';\nimport Loader from './../Loader';\nimport TopMenu from './../TopMenu';\nimport SideMenu from './../SideMenu';\n// hooks\nimport useNavigation from './../../hooks/useNavigation';\n// style\nimport './style.scss';\n\nconst GET_ROCKETS_NAMES = gql`\n    {\n        rockets(offset: 1) {\n            id\n            name\n        }\n    }\n`;\n\nconst NavBar = () => {\n    const navRef = useRef(null);\n    const { isMobileView, isMenuOpen, setIsMenuOpen } = useNavigation(navRef);\n\n    const { data, loading, error } = useQuery(GET_ROCKETS_NAMES);\n\n    if (loading) return <Loader />;\n    if (error) return <Error error={error} />;\n\n    return (\n        <div className=\"container-fluid\" ref={navRef}>\n            <div className=\"row\">\n                <TopMenu\n                    isMenuOpen={isMenuOpen}\n                    isMobileView={isMobileView}\n                    toggleMenu={setIsMenuOpen}\n                    rockets={data.rockets}\n                />\n                <SideMenu\n                    isMenuOpen={isMenuOpen}\n                    isMobileView={isMobileView}\n                    toggleMenu={setIsMenuOpen}\n                    rockets={data.rockets}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NavBar;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,QAAP,MAAqB,eAArB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,6BAA1B,C,CACA;;AACA,OAAO,cAAP;AAEA,MAAMC,iBAAiB,GAAGP,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,MAAMQ,MAAM,GAAG,MAAM;EACjB,MAAMC,MAAM,GAAGV,MAAM,CAAC,IAAD,CAArB;EACA,MAAM;IAAEW,YAAF;IAAgBC,UAAhB;IAA4BC;EAA5B,IAA8CN,aAAa,CAACG,MAAD,CAAjE;EAEA,MAAM;IAAEI,IAAF;IAAQC,OAAR;IAAiBC;EAAjB,IAA2Bd,QAAQ,CAACM,iBAAD,CAAzC;EAEA,IAAIO,OAAJ,EAAa,oBAAO,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAP;EACb,IAAIC,KAAJ,EAAW,oBAAO,oBAAC,KAAD;IAAO,KAAK,EAAEA,KAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAP;EAEX,oBACI;IAAK,SAAS,EAAC,iBAAf;IAAiC,GAAG,EAAEN,MAAtC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,OAAD;IACI,UAAU,EAAEE,UADhB;IAEI,YAAY,EAAED,YAFlB;IAGI,UAAU,EAAEE,aAHhB;IAII,OAAO,EAAEC,IAAI,CAACG,OAJlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAOI,oBAAC,QAAD;IACI,UAAU,EAAEL,UADhB;IAEI,YAAY,EAAED,YAFlB;IAGI,UAAU,EAAEE,aAHhB;IAII,OAAO,EAAEC,IAAI,CAACG,OAJlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAPJ,CADJ,CADJ;AAkBH,CA3BD;;AA6BA,eAAeR,MAAf"},"metadata":{},"sourceType":"module"}